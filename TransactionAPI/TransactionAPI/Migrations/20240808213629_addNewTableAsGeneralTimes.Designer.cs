// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionAPI.ContextDB;

#nullable disable

namespace TransactionAPI.Migrations
{
    [DbContext(typeof(TransactContextDB))]
    [Migration("20240808213629_addNewTableAsGeneralTimes")]
    partial class addNewTableAsGeneralTimes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TransactionAPI.Models.GeneralTimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("GeneralTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("general_time");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timezone");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("GeneralTimes");
                });

            modelBuilder.Entity("TransactionAPI.Models.TransactionModel", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("transaction_id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("ClientLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("client_location");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("transaction_date");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TransactionAPI.Models.test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("erwr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("test");
                });

            modelBuilder.Entity("TransactionAPI.Models.GeneralTimeModel", b =>
                {
                    b.HasOne("TransactionAPI.Models.TransactionModel", "Transaction")
                        .WithOne("GeneralTime")
                        .HasForeignKey("TransactionAPI.Models.GeneralTimeModel", "TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("TransactionAPI.Models.TransactionModel", b =>
                {
                    b.Navigation("GeneralTime");
                });
#pragma warning restore 612, 618
        }
    }
}
